/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignmentjava;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Admin
 */
public class BookManagement extends javax.swing.JFrame {
    private DefaultTableModel table1;
    public static String user;
    private final String[] rAge = {"6+", "8+", "12+", "18+"};
    /**
     * Creates new form BookManagement
     */
    public BookManagement(String username) {
        initComponents();
        user = username;
        ArrayList<AllBook> bookList = new ArrayList<>();
        bookList.add(new AllBook("Sherlock Holmes", "Arthur Conan Doyle", 1887, rAge[3], true));
        bookList.add(new AllBook("Dragon Ball", " Akira Toriyama", 1984, rAge[0], true));
        bookList.add(new AllBook("Đắc nhân tâm", " Dale Carnegie", 1936, rAge[2], false));
        bookList.add(new AllBook("Tôi thấy hoa vàng trên cỏ xanh", "Nguyễn Nhật Ánh", 2010, rAge[1], true));
        bookList.add(new AllBook("Harry Potter", "J. K. Rowling", 1997, rAge[3], false));
        bookList.add(new AllBook("The Lord of the Rings", "J. R. R. Tolkien", 1937, rAge[3], false));
        bookList.add(new AllBook("Doraemon", "Fujiko F. Fujio", 1969, rAge[0], true));
        
        //Declared "title" array
        String[] title = new String[]{"ID", "Book Name", "Author", "Year of Publication", "Recommnended Age", "Status"};
        //Assign new default table model with columnNames is the array "title" and 0 row
        table1 = new DefaultTableModel(title,0);
        //Set tblBookList1 to the model of table1
        tblBookList1.setModel(table1);
        //Run the loop through each element in bookList
        for(AllBook each : bookList){
            //The status of each return true choose String "Available", return false choose String "Not Available"
            String stt = (each.isStatus()) ? "Available" : "Not Available";
            //Declare an array "line" with ID, BookName, Author, Year, RecommendedAge, stt of each for Object 
            Object[] line = new Object[] {each.getID(), each.getBookName(), each.getAuthor(), each.getYear(), each.getRecommendedAge(), stt};
            //Add row to table1 with row data is line array
            table1.addRow(line);
        }
        
        ButtonGroup statuss = new ButtonGroup();
        statuss.add(rbAvailable);
        statuss.add(rbNAvailable);
        rbAvailable.setSelected(true);      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtBookName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBookList1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        btnReturn = new javax.swing.JButton();
        btnAddBook = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdateBook = new javax.swing.JButton();
        rbAvailable = new javax.swing.JRadioButton();
        rbNAvailable = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        cbbRecommendAge = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnLoad = new javax.swing.JButton();
        btnClearSaved = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        txtID.setEnabled(false);
        getContentPane().add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 70, -1));

        txtBookName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtBookName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 170, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Book name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Author");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        txtAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAuthorActionPerformed(evt);
            }
        });
        getContentPane().add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 170, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Year of publication");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));
        getContentPane().add(txtYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 80, -1));

        tblBookList1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Book name", "Author", "Year of publication", "Recommended age", "Status"
            }
        ));
        tblBookList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBookList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 780, 275));

        jLabel6.setFont(new java.awt.Font("Poor Richard", 1, 36)); // NOI18N
        jLabel6.setText("Book List");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, -1, -1));

        btnReturn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnReturn.setForeground(new java.awt.Color(255, 255, 255));
        btnReturn.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\OneDrive\\Documents\\NetBeansProjects\\AssignmentJava\\src\\return1.jpg")); // NOI18N
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });
        getContentPane().add(btnReturn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 50, 50));

        btnAddBook.setBackground(new java.awt.Color(255, 102, 0));
        btnAddBook.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddBook.setForeground(new java.awt.Color(255, 255, 255));
        btnAddBook.setText("Add book");
        btnAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBookActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 99, 51));

        btnDelete.setBackground(new java.awt.Color(255, 102, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 99, 51));

        btnUpdateBook.setBackground(new java.awt.Color(255, 102, 0));
        btnUpdateBook.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdateBook.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateBook.setText("Update");
        btnUpdateBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBookActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdateBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 99, 51));

        rbAvailable.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        rbAvailable.setText("Available");
        rbAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAvailableActionPerformed(evt);
            }
        });
        getContentPane().add(rbAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        rbNAvailable.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        rbNAvailable.setText("Not Available");
        rbNAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNAvailableActionPerformed(evt);
            }
        });
        getContentPane().add(rbNAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Status");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        cbbRecommendAge.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6+", "8+", "12+", "18+" }));
        cbbRecommendAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbRecommendAgeActionPerformed(evt);
            }
        });
        getContentPane().add(cbbRecommendAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 80, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Recommended age");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        btnSave.setBackground(new java.awt.Color(0, 255, 0));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save All");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 100, 40));

        btnLoad.setBackground(new java.awt.Color(0, 102, 255));
        btnLoad.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLoad.setForeground(new java.awt.Color(255, 255, 255));
        btnLoad.setText("Load Recent File");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });
        getContentPane().add(btnLoad, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, 150, 40));

        btnClearSaved.setBackground(new java.awt.Color(255, 0, 0));
        btnClearSaved.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClearSaved.setForeground(new java.awt.Color(255, 255, 255));
        btnClearSaved.setText("Clear Save File");
        btnClearSaved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSavedActionPerformed(evt);
            }
        });
        getContentPane().add(btnClearSaved, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 130, 40));

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        //Declare index variable with the value is the row we selected on the table
        int index = tblBookList1.getSelectedRow();
        //-1 is the value that no row was choosed
        if(index != -1){
            //remove the row that we selected in table1
            table1.removeRow(index);
        }
        //if there is no row has been selected, the pop-up will show the below message
        else {
            JOptionPane.showMessageDialog(null, "Please choose a row to delete !");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cbbRecommendAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbRecommendAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbRecommendAgeActionPerformed

    private void btnAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBookActionPerformed
        // TODO add your handling code here:
        //Declare status in String then assign "Available" if the we choose rbAvailable, "Not Available" if we don't choose it
        String status = (rbAvailable.isSelected()) ? "Available" : "Not Available";
        //Declare Age in String and assign it with the item we choosed in cbbRecommendedAge in String
        String Age = cbbRecommendAge.getSelectedItem().toString();
        //Declare authorName in String with value is null
        String authorName = null;
        //Use checkValidAuthorName method with the text in txtAuthor, if it returns true do the activity
        if(checkValidAuthorName(txtAuthor.getText()) == true){
            //Assign the text we get in txtAuthor to authorName
            authorName = txtAuthor.getText();
        }
        //else Show a MessageDialog with message:"Invalid Author name !!"
        else JOptionPane.showMessageDialog(null, "Invalid Author name !!");
        //Declare year with value 0 in int 
        int year = 0;
        //Use checkValidYear method with the String number we get in txtYear, if it returns true do the activity
        if(checkValidYear(Integer.parseInt(txtYear.getText())) == true){
            //Assign the String number we get in txtYear
            year = Integer.parseInt(txtYear.getText());
        }
        //else Show a MessageDialog with message:"Invalid publishing year !!"
        else JOptionPane.showMessageDialog(null, "Invalid publishing year !!");
        //Get the value of idx in AllBook class and +1 with it, then set it to txtID
        txtID.setText(String.valueOf(AllBook.getidx()+ 1));
        //Declare new object named "newOne" in AllBook class
        AllBook newOne = new AllBook(txtBookName.getText(), authorName, year, Age, rbAvailable.isSelected());
        //Declare an array "line" with ID, BookName, Author, Year, Age, status of "newOne" for Object
        Object[] line = new Object[]{newOne.getID(), newOne.getBookName(), newOne.getAuthor(), newOne.getYear(), Age, status};
        //Add row to table1 with row data is line array
        table1.addRow(line);
    }//GEN-LAST:event_btnAddBookActionPerformed

    private void btnUpdateBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBookActionPerformed
        // TODO add your handling code here:
        //Declare index variable with the value is the row we selected on tblBookList1
        int index = tblBookList1.getSelectedRow();
        //-1 is the value that no row was choosed
        if(index != -1){
            //Get the String value of the position(row: index, column:0) and set it to txtID
            txtID.setText(tblBookList1.getValueAt(index, 0).toString());
            //Declare status in String then assign "Available" if the we choose rbAvailable, "Not Available" if we don't choose it
            String status = (rbAvailable.isSelected()) ? "Available" : "Not Available";
            //Declare recommendedAge in String and assign it with the item we choosed in cbbRecommendedAge in String
            String recommendedAge = cbbRecommendAge.getSelectedItem().toString();
            //Declare authorName in String with value is null
            String authorName = null;
            //Use checkValidAuthorName method with the text in txtAuthor, if it returns true do the activity
            if(checkValidAuthorName(txtAuthor.getText()) == true){
                //Assign the text we get in txtAuthor to authorName
                authorName = txtAuthor.getText();
            }
            //else Show a MessageDialog with message:"Invalid publishing year !!"
            else JOptionPane.showMessageDialog(null, "Invalid Author name !!");
            //Declare year with value 0 in int
            int year = 0;
            //Use checkValidYear method with the String number we get in txtYear, if it returns true do the activity
            if(checkValidYear(Integer.parseInt(txtYear.getText())) == true){
                //Assign the String number we get in txtYear
                year = Integer.parseInt(txtYear.getText());
            }
            //else Show a MessageDialog with message:"Invalid publishing year !!"
            else JOptionPane.showMessageDialog(null, "Invalid publishing year !!");
//Set all value BookName, authorName, year, recommendedAge, status in position(row:index, column: suitable with each value) to table1
            table1.setValueAt(txtBookName.getText(), index, 1);
            table1.setValueAt(authorName, index, 2);
            table1.setValueAt(year, index, 3);
            table1.setValueAt(recommendedAge, index, 4);
            table1.setValueAt(status, index, 5);
        }
        //if there is no row has been selected, the pop-up will show the below message
        else {
            JOptionPane.showMessageDialog(null, "Please choose a row to update !");
        }
    }//GEN-LAST:event_btnUpdateBookActionPerformed

    private void txtBookNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBookNameActionPerformed

    private void rbAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAvailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbAvailableActionPerformed

    private void rbNAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNAvailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbNAvailableActionPerformed

    private void txtAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAuthorActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        Homepage home = new Homepage(user);
        home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        //Declare saveFile in String with it location
        String saveFile = "C:\\Users\\Admin\\OneDrive\\Documents\\NetBeansProjects\\AssignmentJava\\src\\assignmentjava\\Project.txt";
        //Declare "file" in File class, Specify the "saveFile"
        File file = new File(saveFile);
        try {
            //Declare "fw" in FileWriter class, Specify the "file"
            FileWriter fw = new FileWriter(file);
            //Declare "bw" in BufferedWriter class, Specify the "fw"
            BufferedWriter bw = new BufferedWriter(fw);
            //Run nested for loop
            for(int i = 0; i < tblBookList1.getRowCount(); i++){//Run through each row
                for(int j = 0; j<tblBookList1.getColumnCount(); j++){//Run through each collumn
                    //Write the value at position(row: i, column: j) and the separation " , " to String to the "Project.txt" file
                    bw.write(tblBookList1.getValueAt(i, j).toString() + " , ");
                }
                //Write new line when done a row
                bw.newLine();
            }
            //Close the FileWriter and BufferedWriter
            bw.close();
            fw.close();
            
        } catch (IOException ex) {
            
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        // TODO add your handling code here:
        //Declare loadFile in String with it location
        String loadFile = "C:\\Users\\Admin\\OneDrive\\Documents\\NetBeansProjects\\AssignmentJava\\src\\assignmentjava\\Project.txt";
        //Declare "file" in File class, Specify the "loadFile"
        File file = new File(loadFile);
        try {
            //Declare "fr" in FileReader class, Specify the "file"
            FileReader fr = new FileReader(file);
            //Declare "br" in BufferedReader class, Specify the "fr"
            BufferedReader br = new BufferedReader(fr);
            //Declare "model" variable and get the model of "tblBookList1" for it
            DefaultTableModel model = (DefaultTableModel) tblBookList1.getModel();
            //Declare "line" array with the elements are each line in the Project.txt file
            Object[] line = br.lines().toArray();
            //Run the for loop with the condition is the length of "line" array
            for(int i = 0; i<line.length; i++){
                //Declare "row" variable with all elements in position "i" with the separation is " , "
                String[] row = line[i].toString().split(" , ");
                //Add to the "model" with row data is "row".
                model.addRow(row);
            }
        } catch (FileNotFoundException ex) {
            
        }
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnClearSavedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSavedActionPerformed
        // TODO add your handling code here:
        //Declare saveFile in String with it location
        String saveFile = "C:\\Users\\Admin\\OneDrive\\Documents\\NetBeansProjects\\AssignmentJava\\src\\assignmentjava\\Project.txt";
        try {
            //Declare "pw" variable in PrintWriter class, specify the "saveFile"
            PrintWriter pw = new PrintWriter(saveFile);
            //Print nothing to the Project.txt file
            pw.print("");
            //Close the PrintWriter
            pw.close();
        } catch (FileNotFoundException ex) {
            
        }
    }//GEN-LAST:event_btnClearSavedActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        // TODO add your handling code here:
        //Declare index variable with the value is the row we selected on tblBookList1
        int index = tblBookList1.getSelectedRow();
        //-1 is the value that no row was choosed
        if(index != -1){
            //Convert the value to String then set them to the textfields suitable with it
            //index is the row we choose, columns from 0-4 are: ID, BookName, Author, Year
            txtID.setText(tblBookList1.getValueAt(index, 0).toString());
            txtBookName.setText(tblBookList1.getValueAt(index, 1).toString());
            txtAuthor.setText(tblBookList1.getValueAt(index, 2).toString());
            txtYear.setText(tblBookList1.getValueAt(index, 3).toString());
            //Set the item in combo box equal with the String value we have converted
            cbbRecommendAge.setSelectedItem(tblBookList1.getValueAt(index, 4).toString());
            //Get and convert the value at position(Row: index, columns: 5) to String
            //Assign the btg_available with true if the value is equal "Available", with false if the value is not equal "Available"
            boolean btg_available = (tblBookList1.getValueAt(index,5).toString().equalsIgnoreCase("Available")) ? true : false;
            //if true set rbAvailable selected
            if(btg_available){ 
                rbAvailable.setSelected(true);
            }
            //if false set rbNAvailable selected
            else{
                rbNAvailable.setSelected(true);
            }
        }
    }//GEN-LAST:event_tblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookManagement(user).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddBook;
    private javax.swing.JButton btnClearSaved;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdateBook;
    private javax.swing.JComboBox<String> cbbRecommendAge;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbAvailable;
    private javax.swing.JRadioButton rbNAvailable;
    private javax.swing.JTable tblBookList1;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
    
    public boolean checkValidAuthorName(String authorName){
        for(int i = 0; i<authorName.length(); i++){
            char x = authorName.charAt(i);
            if(!Character.isLetter(x) && !Character.isWhitespace(x)){
              return false;
            }
        }
        return true;
    }
    
    public boolean checkValidYear(int year){
        if (year >= 0 && year<=2022){
            return true;
        }
        else return false;
    }
}
